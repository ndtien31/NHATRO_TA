# Qu·∫£n l√Ω nh√† tr·ªç b·∫±ng Streamlit + Google Sheet + pyzipper
import streamlit as st
import pandas as pd
import gspread
import os
import pyzipper
import tempfile
from oauth2client.service_account import ServiceAccountCredentials

# C·∫•u h√¨nh Streamlit
st.set_page_config(page_title="Qu·∫£n l√Ω nh√† tr·ªç", layout="wide")
st.title("üè† ·ª®ng d·ª•ng Qu·∫£n l√Ω Nh√† tr·ªç - K·∫øt n·ªëi Google Sheet")

# ƒê∆∞·ªùng d·∫´n file ZIP ch·ª©a key
ZIP_FILE_PATH = "secret_key.zip"

# Nh·∫≠p m·∫≠t kh·∫©u ZIP
st.subheader("üîê Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ gi·∫£i n√©n file key:")
zip_password = st.text_input("M·∫≠t kh·∫©u ZIP", type="password")

if zip_password:
    with tempfile.TemporaryDirectory() as tmpdir:
        try:
            # Gi·∫£i n√©n file ZIP ch·ª©a key
            with pyzipper.AESZipFile(ZIP_FILE_PATH, 'r') as zf:
                zf.pwd = zip_password.encode()
                zf.extractall(tmpdir)

            json_files = [f for f in os.listdir(tmpdir) if f.endswith(".json")]
            if not json_files:
                st.error("‚ùå Kh√¥ng t√¨m th·∫•y file JSON trong file ZIP.")
            else:
                # Load credentials t·ª´ file JSON
                json_path = os.path.join(tmpdir, json_files[0])
                scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
                creds = ServiceAccountCredentials.from_json_keyfile_name(json_path, scope)
                client = gspread.authorize(creds)

                # Nh·∫≠p URL Google Sheet
                sheet_url = st.text_input("üìÑ D√°n link Google Sheet:", 
                    "https://docs.google.com/spreadsheets/d/1AxkWZAumRsyW8TkxK3-47SrkyoD8mDZKMuaCZ5ebONk/edit#gid=0")

                def load_data():
                    try:
                        sheet = client.open_by_url(sheet_url).sheet1
                        data = sheet.get_all_records()
                        return pd.DataFrame(data), sheet
                    except Exception as e:
                        st.error("‚ùå L·ªói khi k·∫øt n·ªëi Google Sheet.")
                        st.exception(e)
                        return pd.DataFrame(), None

                df, sheet = load_data()
                if not df.empty:
                    st.success("‚úÖ D·ªØ li·ªáu ƒë√£ t·∫£i th√†nh c√¥ng!")
                    st.subheader("üìã D·ªØ li·ªáu Nh√† tr·ªç hi·ªán t·∫°i")
                    st.dataframe(df, use_container_width=True)

                    st.subheader("üõ†Ô∏è Ch·ªânh s·ª≠a / Xo√° d√≤ng")

                    selected_row = st.selectbox(
                        "Ch·ªçn d√≤ng ƒë·ªÉ ch·ªânh s·ª≠a ho·∫∑c xo√°:",
                        df.index,
                        format_func=lambda i: f"Ph√≤ng: {df.iloc[i]['S·ªë ph√≤ng']} | Kh√°ch: {df.iloc[i]['H·ªç t√™n kh√°ch thu√™']}"
                    )

                    with st.expander("‚úèÔ∏è Ch·ªânh s·ª≠a"):
                        with st.form("form_edit"):
                            edited_row = {}
                            for col in df.columns:
                                edited_row[col] = st.text_input(col, df.iloc[selected_row][col])
                            if st.form_submit_button("‚úÖ C·∫≠p nh·∫≠t"):
                                try:
                                    col_count = len(edited_row)
                                    end_col_letter = chr(65 + col_count - 1)
                                    sheet.update(f"A{selected_row+2}:{end_col_letter}{selected_row+2}", [list(edited_row.values())])
                                    st.success("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!")
                                    st.experimental_rerun()
                                except Exception as e:
                                    st.error("‚ùå Kh√¥ng c·∫≠p nh·∫≠t ƒë∆∞·ª£c.")
                                    st.exception(e)

                    with st.expander("üóëÔ∏è Xo√° d√≤ng"):
                        if st.button("‚ùå X√°c nh·∫≠n xo√° d√≤ng"):
                            try:
                                sheet.delete_rows(selected_row + 2)
                                st.success("üóëÔ∏è ƒê√£ xo√° d√≤ng th√†nh c√¥ng!")
                                st.experimental_rerun()
                            except Exception as e:
                                st.error("‚ùå Kh√¥ng xo√° ƒë∆∞·ª£c.")
                                st.exception(e)
                else:
                    st.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu ho·∫∑c kh√¥ng th·ªÉ t·∫£i Google Sheet.")
        except Exception as e:
            st.error("‚ùå L·ªói khi gi·∫£i n√©n ho·∫∑c x·ª≠ l√Ω key.")
            st.exception(e)
